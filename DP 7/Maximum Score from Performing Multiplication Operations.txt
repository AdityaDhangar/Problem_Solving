class Solution {
public:
    int maximumScore(vector<int>& nums, vector<int>& multipliers) {
    int n = nums.size();
    int m = multipliers.size();
    vector<vector<int>> dp(m + 1,vector<int>(m + 1, 0));
    for (int k = 1; k <= m; ++k) {
        for (int i = 0; i <= k; ++i) {
            int j = k - i;
            if (i == 0) {
                dp[i][j] = dp[i][j - 1] + multipliers[k - 1] * nums[n - j];
            } else if (j == 0) {
                dp[i][j] = dp[i - 1][j] + multipliers[k - 1] * nums[i - 1];
            } else {
                dp[i][j] =max(dp[i - 1][j] + multipliers[k - 1] * nums[i - 1], 
                                    dp[i][j - 1] + multipliers[k - 1] * nums[n - j]);
            }
        }
    }
    int maxScore = INT_MIN;
    for (int i = 0; i <= m; ++i) {
        maxScore =max(maxScore, dp[i][m - i]);
    }

    return maxScore;
    }
};
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
     int helper(TreeNode *root,int &maxi,int &mini,int &sum)
    {
        if(!root) return 0;
        int lmn,rmn,rmx,lmx;
        lmn=rmn=INT_MAX;
        lmx=rmx=INT_MIN;
        int l=helper(root->left,lmx,lmn,sum);
        int r=helper(root->right,rmx,rmn,sum);
        int val=l+r+root->val;
        if((lmx<(root->val)) && (rmn>(root->val)))
        {
            sum=max(sum,val);
            maxi=max(root->val,rmx);
            mini=min(root->val,lmn);
        }
        else
        {
            maxi=INT_MAX;
            mini=INT_MIN;
        }
        return val;        
    }
    
    int maxSumBST(TreeNode* root) {
        int sum=0;
        int maxi=INT_MIN,mini=INT_MAX;
        helper(root,maxi,mini,sum);
        return sum;
    }
};s
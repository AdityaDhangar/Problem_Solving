class Solution {
public:
    void dfs(int &src,vector<vector<int>>&adj,vector<int>&v)
    {
        v[src]=1;
        for(auto &i:adj[src])
        {
            if(!v[i]) dfs(i,adj,v);
        }
    }
    bool validPath(int n, vector<vector<int>>& edges, int src, int destination) {
        vector<vector<int>>adj(n);
        for(int i=0;i<edges.size();i++)
        {
            int u=edges[i][0];
            int v=edges[i][1];
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        vector<int>v(n+1,0);
        dfs(src,adj,v);
        return v[destination]==1;
    }
};
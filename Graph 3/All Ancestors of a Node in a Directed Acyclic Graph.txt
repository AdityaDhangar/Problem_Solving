 vector<vector<int>> getAncestors(int n, vector<vector<int>>& edges) {
        
           vector<int> adj[n];
           for(int i=0;i<edges.size();i++){
               adj[edges[i][0]].push_back(edges[i][1]);
           }

           vector<int> InDeg(n,0);
           for(int i=0;i<n;i++){
               for(auto a : adj[i]){
                   InDeg[a]++;
               }
           }

           queue<int> q;
           
           for(int i=0;i<n;i++){
               if(InDeg[i]==0){
                   q.push(i);
               }
           }

           vector<set<int>> ans(n);

           while(!q.empty()){
               int node=q.front();
               q.pop();

               for(auto a : adj[node]){
                   for(int val : ans[node]) { 
                         ans[a].insert(val);
                     }
                   ans[a].insert(node);
                   InDeg[a]--;

                   if(InDeg[a]==0){
                       q.push(a);
                   }
               }
           }

           vector<vector<int>> ans2(n);

           for(int i=0;i<n;i++){
               for(auto a : ans[i]){
                   ans2[i].push_back(a);
               }
           }

           return ans2;
      
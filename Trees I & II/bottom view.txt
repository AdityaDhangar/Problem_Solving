#include<bits/stdc++.h>
using namespace std;

struct Node
{
    int data;
    Node* left,*right;
    Node(int x) : val(x), left(NULL), right(NULL) {}
};

vector<int> bottomView(TreeNode *root) {
    map<int,int> mp;
    queue<pair<TreeNode*,int>> q;
    q.push({root,0});
    while(q.empty()==false){
        auto p=q.front();
        Node *current=p.first;
        int hd=p.second;
        mp[hd]=(current->val);
        q.pop();
        if(current->left!=NULL)
            q.push({current->left,hd-1});
        if(current->right!=NULL)
            q.push({current->right,hd+1});
    }
    vector<int> ans;
    for(auto it:mp)
    {
        ans.push_back(it.second);
    }
    return ans;
}
 

int main() {
    Node *root = new Node(20);  
    root->left = new Node(40);  
    root->right = new Node(60);  
    root->left->left = new Node(80);
    root->left->right = new Node(100);
    
    vector<int> ans=bottomView(root);
    for(auto it:ans)
    {
        cout<<it<<" ";
    }
    return 0;  
	
}
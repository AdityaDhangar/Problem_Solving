int small(vector<int>& a,int value)
{
    int low=0,high=a.size();
    while(low<=high)
    {
        int mid=low+(high-low)/2;
        if(a[mid]<=value)
        {
            low=mid+1;
        }
        else
        {
            high=mid-1;
        }
    }
    return low;
}

int findMedian(vector<vector<int>>& a)
{
    int n=a.size();
    int m=a[0].size();
    int low=INT_MAX,high=INT_MIN,ans=-1;
    for(int i=0;i<n;i++)
    {
        low=min(low,arr[i][0]);
        high=max(high,arr[i][m-1]);
    }
    int half=(n*m)/2;
    while(low<=high)
    {
        int mid=low+(high-low)/2;
        int count = 0;
        for (int i = 0; i < n; i++)
        {
            count += small(arr[i], mid);
        }
        if(count>half)
        {
            high=mid-1;
        }
        else
            low=mid+1;
    }
    return  low;

}

int main()
{
    vector<vector<int>> A={{2, 4, 7},{5, 9, 8},{3, 7, 9}};
    cout<<findMedian(A);
    return 0;
}